name: ci
on: push
jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
      # https://github.com/actions/checkout
      - name: Check out this repo ðŸ›Ž
        uses: actions/checkout@v3

      - name: Get the build info ðŸ–¨
        uses: bahmutov/get-build-id@v1
        id: get-build-id
        with:
          url: 'https://next-ts-app-swart.vercel.app/'

      - name: Print the build outputs ðŸ–¨
        run: |
          echo "Next.js build ID: ${{ steps.get-build-id.outputs.buildId }}"
          echo "Next.js build branch: ${{ steps.get-build-id.outputs.branch }}"
          echo "Next.js build commit: ${{ steps.get-build-id.outputs.commit }}"

      - name: Check out the application repo ðŸ›Ž
        uses: actions/checkout@v3
        with:
          repository: bahmutov/next-ts-app
          # from the build ID, we get the commit matching the deployed site
          # so let's fetch just that commit to make sure our report
          # uses the correct source files
          ref: ${{ steps.get-build-id.outputs.commit }}
          path: next-ts-app

      # help the code coverage tool find the source files
      - name: Copy application source files ðŸ’¾
        run: cp -r next-ts-app/pages .

      - name: Run tests against the production site ðŸ§ª
        # https://github.com/cypress-io/github-action
        uses: cypress-io/github-action@v3
        with:
          config: 'baseUrl=https://next-ts-app-swart.vercel.app/'
        env:
          DEBUG: code-coverage

      # https://github.com/marketplace/actions/github-pages-action
      - name: Deploy code coverage report ðŸš€
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./coverage/lcov-report
